% yin-yang demo for the generic backpropagation

clc;
clear all;
close all;
% number of points sampled randomly
%N = 150;
%[x, d] = yinyang(N);
%sajat tanitohalmazt es elvart kimeneteket megadni
x=[ 1  1 1 1 1 1  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  1 1 1 1 1; %0
    1  0 0 0 0 1  0 0 0 0 1  0 0 0 0 1  0 0 0 0 1  0 0 0 0 1  0 0 0 0 1  0 0 0 0 1; %1
    1  1 1 1 1 1  0 0 0 0 1  0 0 0 0 1  1 1 1 1 1  1 0 0 0 0  1 0 0 0 0  1 1 1 1 1; %2
    1  1 1 1 1 1  0 0 0 0 1  0 0 0 0 1  1 1 1 1 1  0 0 0 0 1  0 0 0 0 1  1 1 1 1 1; %3
    1  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  1 1 1 1 1  0 0 0 0 1  0 0 0 0 1  0 0 0 0 1; %4
    1  1 1 1 1 1  1 0 0 0 0  1 0 0 0 0  1 1 1 1 1  0 0 0 0 1  0 0 0 0 1  1 1 1 1 1; %5
	1  1 1 1 1 1  1 0 0 0 0  1 0 0 0 0  1 1 1 1 1  1 0 0 0 1  1 0 0 0 1  1 1 1 1 1; %6
	1  1 1 1 1 1  0 0 0 0 1  0 0 0 0 1  0 0 0 0 1  0 0 0 0 1  0 0 0 0 1  0 0 0 0 1; %7
	1  1 1 1 1 1  1 0 0 0 1  1 0 0 0 1  1 1 1 1 1  1 0 0 0 1  1 0 0 0 1  1 1 1 1 1; %8
    1  1 1 1 1 1  1 0 0 0 1  1 0 0 0 1  1 1 1 1 1  0 0 0 0 1  0 0 0 0 1  1 1 1 1 1; %9
    
    1  0 1 1 1 0  1 0 0 0 1  1 0 0 1 1  1 0 1 0 1  1 1 0 0 1  1 0 0 0 1  0 1 1 1 0; 
    1  0 1 1 0 0  0 0 1 0 0  0 0 1 0 0  0 0 1 0 0  0 0 1 0 0  0 0 1 0 0  0 1 1 1 0;
    1  0 1 1 1 0  1 0 0 0 1  0 0 0 0 1  0 1 1 1 0  1 0 0 0 0  1 0 0 0 0  1 1 1 1 1;
    1  0 1 1 1 0  1 0 0 0 1  0 0 0 0 1  0 0 1 1 0  0 0 0 0 1  1 0 0 0 1  0 1 1 1 0;
    1  1 0 0 1 0  1 0 0 1 0  1 0 0 1 0  1 1 1 1 1  0 0 0 1 0  0 0 0 1 0  0 0 0 1 0;
    1  1 1 1 1 1  1 0 0 0 0  1 0 0 0 0  1 1 1 1 0  0 0 0 0 1  0 0 0 0 1  1 1 1 1 0;
    1  0 1 1 1 1  1 0 0 0 0  1 0 0 0 0  1 1 1 1 0  1 0 0 0 1  1 0 0 0 1  0 1 1 1 0;
    1  1 1 1 1 1  0 0 0 0 1  0 0 0 0 1  0 0 1 1 0  0 1 0 0 0  0 1 0 0 0  0 1 0 0 0;
    1  0 1 1 1 0  1 0 0 0 1  1 0 0 0 1  0 1 1 1 0  1 0 0 0 1  1 0 0 0 1  0 1 1 1 0;
    1  0 1 1 1 0  1 0 0 0 1  1 0 0 0 1  0 1 1 1 1  0 0 0 0 1  1 0 0 0 1  0 1 1 1 0;
    
    1  0 1 1 1 0  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  0 1 1 1 0; 
    1  0 0 0 1 0  0 0 1 1 0  0 1 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 0;
    1  0 1 1 1 0  1 0 0 0 1  0 0 0 0 1  0 0 0 1 0  0 0 1 0 0  0 1 0 0 0  1 1 1 1 1;
    1  0 1 1 1 0  1 0 0 0 1  0 0 0 0 1  0 1 1 1 0  0 0 0 0 1  1 0 0 0 1  0 1 1 1 0;
    1  0 0 0 1 1  0 0 1 0 1  0 1 0 0 1  1 0 0 0 1  1 1 1 1 1  0 0 0 0 1  0 0 0 0 1;
    1  1 1 1 1 1  1 0 0 0 0  1 0 0 0 0  1 1 1 1 0  0 0 0 0 1  0 0 0 0 1  1 1 1 1 0;
    1  0 1 1 1 1  1 0 0 0 0  1 0 0 0 0  1 1 1 1 0  1 0 0 0 1  1 0 0 0 1  0 1 1 1 0;
    1  1 1 1 1 1  0 0 0 0 1  0 0 0 0 1  0 0 0 1 0  0 1 0 0 0  0 1 0 0 0  0 1 0 0 0;
    1  0 1 1 1 0  1 0 0 0 1  1 0 0 0 1  0 1 1 1 0  1 0 0 0 1  1 0 0 0 1  0 1 1 1 0;
    1  0 1 1 1 0  1 0 0 0 1  1 0 0 0 1  0 1 1 1 1  0 0 0 0 1  1 0 0 0 1  0 1 1 1 0;
    
    1  0 1 1 1 0  0 1 0 1 0  0 1 0 1 0  0 1 0 1 0  0 1 0 1 0  0 1 0 1 0  0 1 1 1 0; 
    1  0 0 1 0 0  0 1 1 0 0  1 0 1 0 0  0 0 1 0 0  0 0 1 0 0  0 0 1 0 0  0 0 1 0 0;
    1  0 1 1 1 0  1 0 0 0 1  0 0 0 1 0  0 0 1 0 0  0 1 0 0 0  1 0 0 0 0  1 1 1 1 1;
    1  0 1 1 1 1  0 0 0 0 1  0 0 0 0 1  0 1 1 1 1  0 0 0 0 1  0 0 0 0 1  0 1 1 1 1;
    1  0 0 0 0 1  0 0 0 1 0  0 0 1 1 0  0 1 0 1 0  1 1 1 1 1  0 0 0 1 0  0 0 0 1 0;
    1  0 1 1 1 1  0 1 0 0 0  0 1 0 0 0  0 1 1 1 1  0 0 0 0 1  0 0 0 0 1  0 1 1 1 1;
    1  0 0 1 1 0  0 1 0 0 0  1 0 0 0 0  1 0 1 1 0  1 0 0 0 1  1 0 0 0 1  0 1 1 1 0;
    1  1 1 1 1 1  0 0 0 1 0  0 0 1 0 0  0 0 1 0 0  0 0 1 0 0  0 0 1 0 0  0 0 1 0 0;
    1  0 1 1 1 0  1 0 0 0 1  0 1 0 1 0  0 0 1 0 0  0 1 0 1 0  1 0 0 0 1  0 1 1 1 0;
    1  0 1 1 1 0  1 0 0 0 1  1 0 0 0 1  0 1 1 1 0  0 0 0 0 1  0 1 0 0 1  0 0 1 1 0;
    
    1  0 1 1 1 1  0 1 0 0 1  0 1 0 0 1  0 1 0 0 1  0 1 0 0 1  0 1 0 0 1  0 1 1 1 1;
    1  0 0 0 1 0  0 0 1 1 0  0 1 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 1 1 1;
    1  0 0 1 1 0  0 1 0 0 1  0 0 0 0 1  0 0 0 1 0  0 0 1 0 0  0 1 0 0 0  1 1 1 1 1;
    1  0 0 1 1 0  0 1 0 0 1  0 0 0 0 1  0 0 1 1 0  0 0 0 0 1  0 1 0 0 1  0 0 1 1 0;
    1  1 0 0 0 0  1 0 1 0 0  1 0 1 0 0  1 1 1 1 1  0 0 1 0 0  0 0 1 0 0  0 0 1 0 0;
    1  1 1 1 1 0  1 0 0 0 0  1 0 0 0 0  1 1 1 0 0  0 0 0 1 0  0 0 0 1 0  1 1 1 0 0;
    1  1 0 0 0 0  1 0 0 0 0  1 0 0 0 0  1 1 1 1 1  1 0 0 0 1  1 0 0 0 1  1 1 1 1 1;
    1  0 1 1 1 1  0 0 0 0 1  0 0 0 1 0  0 0 1 0 0  0 0 1 0 0  0 0 1 0 0  0 0 1 0 0;
    1  1 1 1 1 1  1 0 0 0 1  0 1 0 1 0  0 0 1 0 0  0 1 0 1 0  1 0 0 0 1  1 1 1 1 1;
    1  0 0 0 0 1  0 1 0 0 1  0 0 0 0 1  0 1 1 1 1  0 0 0 0 1  0 0 0 0 1  0 1 1 1 1;

    1  1 1 1 1 1  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  1 1 1 1 1;
    1  0 0 0 0 1  0 0 0 0 1  0 0 0 0 1  0 0 0 0 1  0 0 0 0 1  0 0 0 0 1  0 0 0 0 1;
    1  1 1 1 1 1  0 0 0 0 1  0 0 0 0 1  1 1 1 1 1  1 0 0 0 0  1 0 0 0 0  1 1 1 1 1;
    1  1 1 1 1 1  0 0 0 0 1  0 0 0 0 1  1 1 1 1 1  0 0 0 0 1  0 0 0 0 1  1 1 1 1 1;
    1  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  1 1 1 1 1  0 0 0 0 1  0 0 0 0 1  0 0 0 0 1;
    1  1 1 1 1 1  1 0 0 0 0  1 0 0 0 0  1 1 1 1 1  0 0 0 0 1  0 0 0 0 1  1 1 1 1 1;
	1  1 1 1 1 1  1 0 0 0 0  1 0 0 0 0  1 1 1 1 1  1 0 0 0 1  1 0 0 0 1  1 1 1 1 1;
	1  1 1 1 1 1  0 0 0 0 1  0 0 0 0 1  0 0 0 0 1  0 0 0 0 1  0 0 0 0 1  0 0 0 0 1;
	1  1 1 1 1 1  1 0 0 0 1  1 0 0 0 1  1 1 1 1 1  1 0 0 0 1  1 0 0 0 1  1 1 1 1 1;
    1  1 1 1 1 1  1 0 0 0 1  1 0 0 0 1  1 1 1 1 1  0 0 0 0 1  0 0 0 0 1  1 1 1 1 1;
    
    1  0 1 1 1 0  1 0 0 0 1  1 0 0 1 1  1 0 1 0 1  1 1 0 0 1  1 0 0 0 1  0 1 1 1 0; 
    1  0 1 1 0 0  0 0 1 0 0  0 0 1 0 0  0 0 1 0 0  0 0 1 0 0  0 0 1 0 0  0 1 1 1 0;
    1  0 1 1 1 0  1 0 0 0 1  0 0 0 0 1  0 1 1 1 0  1 0 0 0 0  1 0 0 0 0  1 1 1 1 1;
    1  0 1 1 1 0  1 0 0 0 1  0 0 0 0 1  0 0 1 1 0  0 0 0 0 1  1 0 0 0 1  0 1 1 1 0;
    1  1 0 0 1 0  1 0 0 1 0  1 0 0 1 0  1 1 1 1 1  0 0 0 1 0  0 0 0 1 0  0 0 0 1 0;
    1  1 1 1 1 1  1 0 0 0 0  1 0 0 0 0  1 1 1 1 0  0 0 0 0 1  0 0 0 0 1  1 1 1 1 0;
    1  0 1 1 1 1  1 0 0 0 0  1 0 0 0 0  1 1 1 1 0  1 0 0 0 1  1 0 0 0 1  0 1 1 1 0;
    1  1 1 1 1 1  0 0 0 0 1  0 0 0 0 1  0 0 1 1 0  0 1 0 0 0  0 1 0 0 0  0 1 0 0 0;
    1  0 1 1 1 0  1 0 0 0 1  1 0 0 0 1  0 1 1 1 0  1 0 0 0 1  1 0 0 0 1  0 1 1 1 0;
    1  0 1 1 1 0  1 0 0 0 1  1 0 0 0 1  0 1 1 1 1  0 0 0 0 1  1 0 0 0 1  0 1 1 1 0];

    x_Teszt = [1  0 1 1 1 0  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  1 0 0 0 1  0 1 1 1 0; 
    1  0 0 0 1 0  0 0 1 1 0  0 1 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 0;
    1  0 1 1 1 0  1 0 0 0 1  0 0 0 0 1  0 0 0 1 0  0 0 1 0 0  0 1 0 0 0  1 1 1 1 1;
    1  0 1 1 1 0  1 0 0 0 1  0 0 0 0 1  0 1 1 1 0  0 0 0 0 1  1 0 0 0 1  0 1 1 1 0;
    1  0 0 0 1 1  0 0 1 0 1  0 1 0 0 1  1 0 0 0 1  1 1 1 1 1  0 0 0 0 1  0 0 0 0 1;
    1  1 1 1 1 1  1 0 0 0 0  1 0 0 0 0  1 1 1 1 0  0 0 0 0 1  0 0 0 0 1  1 1 1 1 0;
    1  0 1 1 1 1  1 0 0 0 0  1 0 0 0 0  1 1 1 1 0  1 0 0 0 1  1 0 0 0 1  0 1 1 1 0;
    1  1 1 1 1 1  0 0 0 0 1  0 0 0 0 1  0 0 0 1 0  0 1 0 0 0  0 1 0 0 0  0 1 0 0 0;
    1  0 1 1 1 0  1 0 0 0 1  1 0 0 0 1  0 1 1 1 0  1 0 0 0 1  1 0 0 0 1  0 1 1 1 0;
    1  0 1 1 1 0  1 0 0 0 1  1 0 0 0 1  0 1 1 1 1  0 0 0 0 1  1 0 0 0 1  0 1 1 1 0;];

   d=[1 -1 -1 -1 -1 -1 -1 -1 -1 -1; %0
	-1 1 -1 -1 -1 -1 -1 -1 -1 -1; %1
	-1 -1 1 -1 -1 -1 -1 -1 -1 -1; %2
	-1 -1 -1 1 -1 -1 -1 -1 -1 -1; %3
    -1 -1 -1 -1 1 -1 -1 -1 -1 -1; %4
    -1 -1 -1 -1 -1 1 -1 -1 -1 -1; %5
    -1 -1 -1 -1 -1 -1 1 -1 -1 -1; %6
    -1 -1 -1 -1 -1 -1 -1 1 -1 -1; %7
    -1 -1 -1 -1 -1 -1 -1 -1 1 -1; %8
    -1 -1 -1 -1 -1 -1 -1 -1 -1 1 %9
    
    1 -1 -1 -1 -1 -1 -1 -1 -1 -1;
	-1 1 -1 -1 -1 -1 -1 -1 -1 -1;
	-1 -1 1 -1 -1 -1 -1 -1 -1 -1;
	-1 -1 -1 1 -1 -1 -1 -1 -1 -1;
    -1 -1 -1 -1 1 -1 -1 -1 -1 -1;
    -1 -1 -1 -1 -1 1 -1 -1 -1 -1;
    -1 -1 -1 -1 -1 -1 1 -1 -1 -1;
    -1 -1 -1 -1 -1 -1 -1 1 -1 -1;
    -1 -1 -1 -1 -1 -1 -1 -1 1 -1;
    -1 -1 -1 -1 -1 -1 -1 -1 -1 1
    
    1 -1 -1 -1 -1 -1 -1 -1 -1 -1;
	-1 1 -1 -1 -1 -1 -1 -1 -1 -1;
	-1 -1 1 -1 -1 -1 -1 -1 -1 -1;
	-1 -1 -1 1 -1 -1 -1 -1 -1 -1;
    -1 -1 -1 -1 1 -1 -1 -1 -1 -1;
    -1 -1 -1 -1 -1 1 -1 -1 -1 -1;
    -1 -1 -1 -1 -1 -1 1 -1 -1 -1;
    -1 -1 -1 -1 -1 -1 -1 1 -1 -1;
    -1 -1 -1 -1 -1 -1 -1 -1 1 -1;
    -1 -1 -1 -1 -1 -1 -1 -1 -1 1
    
    1 -1 -1 -1 -1 -1 -1 -1 -1 -1;
	-1 1 -1 -1 -1 -1 -1 -1 -1 -1;
	-1 -1 1 -1 -1 -1 -1 -1 -1 -1;
	-1 -1 -1 1 -1 -1 -1 -1 -1 -1;
    -1 -1 -1 -1 1 -1 -1 -1 -1 -1;
    -1 -1 -1 -1 -1 1 -1 -1 -1 -1;
    -1 -1 -1 -1 -1 -1 1 -1 -1 -1;
    -1 -1 -1 -1 -1 -1 -1 1 -1 -1;
    -1 -1 -1 -1 -1 -1 -1 -1 1 -1;
    -1 -1 -1 -1 -1 -1 -1 -1 -1 1
    
    1 -1 -1 -1 -1 -1 -1 -1 -1 -1;
	-1 1 -1 -1 -1 -1 -1 -1 -1 -1;
	-1 -1 1 -1 -1 -1 -1 -1 -1 -1;
	-1 -1 -1 1 -1 -1 -1 -1 -1 -1;
    -1 -1 -1 -1 1 -1 -1 -1 -1 -1;
    -1 -1 -1 -1 -1 1 -1 -1 -1 -1;
    -1 -1 -1 -1 -1 -1 1 -1 -1 -1;
    -1 -1 -1 -1 -1 -1 -1 1 -1 -1;
    -1 -1 -1 -1 -1 -1 -1 -1 1 -1;
    -1 -1 -1 -1 -1 -1 -1 -1 -1 1
    
    1 -1 -1 -1 -1 -1 -1 -1 -1 -1;
	-1 1 -1 -1 -1 -1 -1 -1 -1 -1;
	-1 -1 1 -1 -1 -1 -1 -1 -1 -1;
	-1 -1 -1 1 -1 -1 -1 -1 -1 -1;
    -1 -1 -1 -1 1 -1 -1 -1 -1 -1;
    -1 -1 -1 -1 -1 1 -1 -1 -1 -1;
    -1 -1 -1 -1 -1 -1 1 -1 -1 -1;
    -1 -1 -1 -1 -1 -1 -1 1 -1 -1;
    -1 -1 -1 -1 -1 -1 -1 -1 1 -1;
    -1 -1 -1 -1 -1 -1 -1 -1 -1 1
    
    1 -1 -1 -1 -1 -1 -1 -1 -1 -1;
	-1 1 -1 -1 -1 -1 -1 -1 -1 -1;
	-1 -1 1 -1 -1 -1 -1 -1 -1 -1;
	-1 -1 -1 1 -1 -1 -1 -1 -1 -1;
    -1 -1 -1 -1 1 -1 -1 -1 -1 -1;
    -1 -1 -1 -1 -1 1 -1 -1 -1 -1;
    -1 -1 -1 -1 -1 -1 1 -1 -1 -1;
    -1 -1 -1 -1 -1 -1 -1 1 -1 -1;
    -1 -1 -1 -1 -1 -1 -1 -1 1 -1;
    -1 -1 -1 -1 -1 -1 -1 -1 -1 1];

d_Teszt=[1 -1 -1 -1 -1 -1 -1 -1 -1 -1; 
	-1 1 -1 -1 -1 -1 -1 -1 -1 -1;
	-1 -1 1 -1 -1 -1 -1 -1 -1 -1;
	-1 -1 -1 1 -1 -1 -1 -1 -1 -1;
    -1 -1 -1 -1 1 -1 -1 -1 -1 -1;
    -1 -1 -1 -1 -1 1 -1 -1 -1 -1;
    -1 -1 -1 -1 -1 -1 1 -1 -1 -1;
    -1 -1 -1 -1 -1 -1 -1 1 -1 -1;
    -1 -1 -1 -1 -1 -1 -1 -1 1 -1;
    -1 -1 -1 -1 -1 -1 -1 -1 -1 1];
% shifting d to {-1, 1}
%d = d*2-1; 

% injecting bias
%x = [ones(N,1) x];

% defining activation function & its derivative
%theta = @tansig;
theta = @(s)(1-exp(-s))./(1+exp(-s));
%dtheta = @(x) 1-theta(x).*theta(x);
dtheta= @(s)2*exp(-s)./((1+exp(-s)).^2);

% number of neurons in the consecutive layers
layers = [36 12 10];

W = genbackprop(x, d, layers, theta, dtheta, 500, 0.01, 0.07);

%Teszthalamaz bemeneteire kapott értékek meghatározása
[mteszt, nteszt] = size(d_Teszt);
for j=1:mteszt
    x1=x_Teszt(j,:)';      
    %az inger kiszámolása rejtett rétegre
    s1=W{1}*x1;       
    %a rejtett réteg kimenetének a kiszámolása
    y1=theta(s1);%       
    %a rejtett réteg kimenete a kimeneti réteg bemenete
    x2=[y1];          
    %az inger kiszámolása rejtett rétegre
    s2=W{2}*x2;            
    %a rejtett réteg kimenetének a kiszámolása
    y2{j}=theta(s2); 
end

%Összehasonlítas az elvárt kimenetekkel es megjelenítés
for i=1:mteszt
    for j=1:nteszt
        maxi=y2{i}(i);
        if y2{i}(j)==maxi
            kapott_ertek(i)=j-1;
        end
        if d_Teszt(i,j)==1
            elvart_ertek(i)=j-1;
        end
    end
end
t1=1:10;
figure(1)

plot(t1,elvart_ertek,'r*');
legend_text{1}=strcat('elvart ertek');  

hold on;

plot(t1,kapott_ertek,'g.','MarkerSize',10);
legend_text{2}=strcat('kapot tertek');
title('Kapot eredmények ellenőrzése')
ylabel('érték')
xlabel('sorszám')
legend(legend_text,'location','northwest');
confusion_matrix=zeros(10,10);
for i=1:10
    for j=1:10
        if kapott_ertek(j)==elvart_ertek(i)
        confusion_matrix(i,j)=confusion_matrix(i,j)+1;
        end
    end
end
confusion_matrix